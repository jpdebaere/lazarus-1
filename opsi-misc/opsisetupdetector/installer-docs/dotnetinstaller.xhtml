<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><!--This file was converted to xhtml by LibreOffice - see https://cgit.freedesktop.org/libreoffice/core/tree/filter/source/xslt for the code.--><head profile="http://dublincore.org/documents/dcmi-terms/"><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/><title xml:lang="en-US">- no title specified</title><meta name="DCTERMS.title" content="" xml:lang="en-US"/><meta name="DCTERMS.language" content="en-US" scheme="DCTERMS.RFC4646"/><meta name="DCTERMS.source" content="http://xml.openoffice.org/odf2xhtml"/><meta name="DCTERMS.issued" content="2019-04-24T18:19:59.391000000" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.modified" content="2019-04-24T18:26:32.790000000" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.provenance" content="" xml:lang="en-US"/><meta name="DCTERMS.subject" content="," xml:lang="en-US"/><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" hreflang="en"/><link rel="schema.DCTERMS" href="http://purl.org/dc/terms/" hreflang="en"/><link rel="schema.DCTYPE" href="http://purl.org/dc/dcmitype/" hreflang="en"/><link rel="schema.DCAM" href="http://purl.org/dc/dcam/" hreflang="en"/><style type="text/css">
    @page {  }
    table { border-collapse:collapse; border-spacing:0; empty-cells:show }
    td, th { vertical-align:top; font-size:12pt;}
    h1, h2, h3, h4, h5, h6 { clear:both;}
    ol, ul { margin:0; padding:0;}
    li { list-style: none; margin:0; padding:0;}
    /* "li span.odfLiEnd" - IE 7 issue*/
    li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }
    span.footnodeNumber { padding-right:1em; }
    span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }
    span.heading_numbering { margin-right: 0.8rem; }* { margin:0;}
    .P1 { font-size:10pt; margin-bottom:0cm; margin-top:0cm; font-family:Courier New; writing-mode:page; margin-left:0.635cm; margin-right:0cm; text-indent:0cm; }
    .P2 { font-size:12pt; font-family:Liberation Serif; writing-mode:page; margin-left:0cm; margin-right:0cm; text-indent:0cm; }
    .P3 { font-size:12pt; margin-left:0.635cm; margin-right:0cm; text-indent:0cm; font-family:Liberation Serif; writing-mode:page; }
    .P4 { font-size:12pt; font-family:Liberation Serif; writing-mode:page; margin-left:0cm; margin-right:0cm; text-indent:0cm; }
    .Standard { font-size:12pt; font-family:Liberation Serif; writing-mode:page; }
    .T1 { font-family:Times New Roman; font-size:12pt; }
    .T2 { font-family:Times New Roman; font-size:12pt; font-weight:bold; }
    /* ODF styles with no properties representable as CSS */
     { }
    </style></head><body dir="ltr" style="max-width:21.001cm;margin-top:2cm; margin-bottom:2cm; margin-left:2cm; margin-right:2cm; "><p class="Standard"><span class="T1">dotNetInstaller Users Guide</span><br/><span class="T1">dotNetInstaller</span></p><p class="P4"><span class="T1">Â </span></p><p class="P4"><span class="T2">dotNetInstaller.exe</span><span class="T1"> is a bootstrapper, a lightweight driver for your setup process. Simply put, this is your setup.exe. It offers a user interface, progress, status, supports silent installs and enables user selection of optional components. The workflow is highly flexible and the UI can be somewhat customized. </span></p><p class="P4"><span class="T1">Command Line Arguments </span></p><p class="P2"><span class="T1">/? or /help </span></p><p class="P3"><span class="T1">Display a help screen. </span></p><p class="P2"><span class="T1">/ConfigFile [path] </span></p><p class="P3"><span class="T1">Optional configuration file name and location, defaults to configuration.xml in the same location as the dotNetInstaller executable. </span></p><p class="P2"><span class="T1">/i </span></p><p class="P3"><span class="T1">Install components (default). </span></p><p class="P2"><span class="T1">/x </span></p><p class="P3"><span class="T1">Uninstall components. </span></p><p class="P2"><span class="T1">/q </span></p><p class="P3"><span class="T1">Forces silent UI mode, overriding the configuration's ui_mode attribute. </span></p><p class="P2"><span class="T1">/qb </span></p><p class="P3"><span class="T1">Forces basic UI mode, overriding the configuration's ui_mode attribute. A basic UI mode shows progress dialogs but does not require any user interaction. </span></p><p class="P2"><span class="T1">/nq </span></p><p class="P3"><span class="T1">Forces full UI mode, overriding the configuration's ui_mode attribute. </span></p><p class="P2"><span class="T1">/nosplash </span></p><p class="P3"><span class="T1">Do not display splash screen. </span></p><p class="P2"><span class="T1">/noreboot </span></p><p class="P3"><span class="T1">Do not actually reboot Windows even if a reboot was required by a component or the user chooses to reboot when prompted. </span></p><p class="P2"><span class="T1">/noRunOnReboot </span></p><p class="P3"><span class="T1">Do not actually write the RunOnReboot registry key if a reboot is required by a component or the user chooses to reboot when prompted. </span></p><p class="P2"><span class="T1">/CompleteCommandArgs </span></p><p class="P3"><span class="T1">Specify additional arguments for the complete_command. For example, if your complete command is an MSI this lets you pass additional parameters. </span></p><p class="P2"><span class="T1">/Log </span></p><p class="P3"><span class="T1">Creates a log file during installation with information and errors useful for debugging. You can find this file in the user temporary directory with the name dotNetInstallerLog.txt (eg. C:\Documents and Settings\YOUR_NAME\Local Settings\Temp\dotNetInstallerLog.txt). Its location and name can be specified with </span><span class="T2">/LogFile</span><span class="T1">. </span></p><p class="P2"><span class="T1">/LogFile [path] </span></p><p class="P3"><span class="T1">Optional log file name and location. </span></p><p class="P2"><span class="T1">/ExtractCab </span></p><p class="P3"><span class="T1">If this package contains an embedded CABs, extract all contents under a new folder called SupportFiles in the current directory. When specified, all other options are ignored and no installations are run. </span></p><p class="P2"><span class="T1">/DisplayCab </span></p><p class="P3"><span class="T1">If this package contains an embedded CAB, display its contents. </span></p><p class="P2"><span class="T1">/DisplayConfig </span></p><p class="P3"><span class="T1">Display the complete list of configurations and components without checking processor architecture or lcid. </span></p><p class="P2"><span class="T1">/ComponentArgs "*|id|display_name":"value" </span></p><p class="P3"><span class="T1">Additional component parameters. This enables passing additional command-line arguments to all (*) or specific components by their id and/or display_name, in this order. The value is appended to both non-silent and silent command lines of msi and cmd type components. The component id or display_name must match exactly the one in the configuration.xml. </span></p><p class="P3"><span class="T1">Examples: </span></p><p class="P3"><span class="T1">Copy </span></p><p class="P1">setup.exe /ComponentArgs MySetup:"COLOR=blue SIZE=big"setup.exe /ComponentArgs MySetup:"COLOR=blue" /ComponentArgs MySetup:"SIZE=big"</p><p class="Standard"><a id="commandlinearguments"/></p></body></html>